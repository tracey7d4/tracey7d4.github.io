<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>map on Tracey Hoang</title>
    <link>http://www.example.com/tags/map/</link>
    <description>Recent content in map on Tracey Hoang</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 24 Oct 2020 22:20:00 +1100</lastBuildDate>
    
	<atom:link href="http://www.example.com/tags/map/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Majority Element Of An Array</title>
      <link>http://www.example.com/docs/majorityelement/</link>
      <pubDate>Sat, 24 Oct 2020 22:20:00 +1100</pubDate>
      
      <guid>http://www.example.com/docs/majorityelement/</guid>
      <description>Source code
Problem description An array is said to have a majority element if more than half of its elements are the same.
Given a non-empty array arr. Check to see if the array has a majority element.
Implementation Let&amp;rsquo;s have a look at some approaches of solving the given problem.
1- Brute Force algorithm This approach is to find the occurrences of each element. As soon as an occurrence of an element is greater than a half, we know that this array has majority element and then return true.</description>
    </item>
    
    <item>
      <title>Find Pairs With the Same Difference from an Array- Map Example</title>
      <link>http://www.example.com/docs/mapexample/</link>
      <pubDate>Wed, 21 Oct 2020 11:00:00 +1100</pubDate>
      
      <guid>http://www.example.com/docs/mapexample/</guid>
      <description>Source code
Go map Go map is built-in type that implements a hash table - a very useful data structure in computer science. A Go map type is defined as
map[Key]Value We use make function to initialise a map, and also need to define types for map&amp;rsquo;s Key and Value. For example, initialisation of a map of string keys to float64 values is as follows.
m := make(map[string]float64) Let have a quick look at an small example about inserting, looking up, and deteting data from a map.</description>
    </item>
    
  </channel>
</rss>